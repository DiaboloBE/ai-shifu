"""Initial migration.

Revision ID: bf850e1dd5a0
Revises: fa335667eb18
Create Date: 2024-08-08 15:50:10.864912

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'bf850e1dd5a0'
down_revision = 'fa335667eb18'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discount',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('discount_id', sa.String(length=36), nullable=False, comment='Discount UUID'),
    sa.Column('discount_code', sa.String(length=36), nullable=False, comment='Discount code'),
    sa.Column('discount_type', sa.Integer(), nullable=False, comment='Discount type: 0-percent, 1-amount'),
    sa.Column('discount_value', sa.Numeric(precision=10, scale=2), nullable=False, comment='Discount value'),
    sa.Column('discount_limit', sa.Numeric(precision=10, scale=2), nullable=False, comment='Discount limit'),
    sa.Column('discount_start', sa.TIMESTAMP(), nullable=False, comment='Discount start time'),
    sa.Column('discount_end', sa.TIMESTAMP(), nullable=False, comment='Discount end time'),
    sa.Column('discount_channel', sa.String(length=36), nullable=False, comment='Discount channel'),
    sa.Column('discount_filter', sa.Text(), nullable=False, comment='Discount filter'),
    sa.Column('discount_count', mysql.BIGINT(), nullable=False, comment='Discount count'),
    sa.Column('discount_used', mysql.BIGINT(), nullable=False, comment='Discount used'),
    sa.Column('discount_generated_user', mysql.BIGINT(), nullable=False, comment='Discount generated user'),
    sa.Column('created', sa.TIMESTAMP(), nullable=False, comment='Creation time'),
    sa.Column('updated', sa.TIMESTAMP(), nullable=False, comment='Update time'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Status of the discount: 0-inactive, 1-active'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('discount', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_discount_discount_code'), ['discount_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_discount_discount_id'), ['discount_id'], unique=False)

    op.create_table('discount_record',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('record_id', sa.String(length=36), nullable=False, comment='Record UUID'),
    sa.Column('discount_id', sa.String(length=36), nullable=False, comment='Discount UUID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='User UUID'),
    sa.Column('course_id', sa.String(length=36), nullable=False, comment='Course UUID'),
    sa.Column('discount_code', sa.String(length=36), nullable=False, comment='Discount code'),
    sa.Column('discount_type', sa.Integer(), nullable=False, comment='Discount type: 0-percent, 1-amount'),
    sa.Column('discount_value', sa.Numeric(precision=10, scale=2), nullable=False, comment='Discount value'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Status of the record: 0-inactive, 1-active'),
    sa.Column('created', sa.TIMESTAMP(), nullable=False, comment='Creation time'),
    sa.Column('updated', sa.TIMESTAMP(), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('discount_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_discount_record_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_discount_record_discount_id'), ['discount_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_discount_record_record_id'), ['record_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_discount_record_user_id'), ['user_id'], unique=False)

    op.create_table('pingxx_order',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('order_id', sa.String(length=36), nullable=False, comment='Order UUID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='User UUID'),
    sa.Column('course_id', sa.String(length=36), nullable=False, comment='Course UUID'),
    sa.Column('record_id', sa.String(length=36), nullable=False, comment='Record UUID'),
    sa.Column('pingxx_transaction_no', sa.String(length=36), nullable=False, comment='Pingxx transaction number'),
    sa.Column('pingxx_app_id', sa.String(length=36), nullable=False, comment='Pingxx app ID'),
    sa.Column('pingxx_channel', sa.String(length=36), nullable=False, comment='Payment channel'),
    sa.Column('pingxx_id', sa.String(length=36), nullable=False, comment='Pingxx ID'),
    sa.Column('channel', sa.String(length=36), nullable=False, comment='Payment channel'),
    sa.Column('amount', mysql.BIGINT(), nullable=False, comment='Payment amount'),
    sa.Column('extra', sa.Text(), nullable=False, comment='Extra information'),
    sa.Column('currency', sa.String(length=36), nullable=False, comment='Currency'),
    sa.Column('subject', sa.String(length=255), nullable=False, comment='Payment subject'),
    sa.Column('body', sa.String(length=255), nullable=False, comment='Payment body'),
    sa.Column('order_no', sa.String(length=255), nullable=False, comment='Order number'),
    sa.Column('client_ip', sa.String(length=255), nullable=False, comment='Client IP'),
    sa.Column('created', sa.TIMESTAMP(), nullable=False, comment='Creation time'),
    sa.Column('updated', sa.TIMESTAMP(), nullable=False, comment='Update time'),
    sa.Column('status', sa.Integer(), nullable=False, comment='Status of the order: 0-unpaid, 1-paid, 2-refunded, 3-closed, 4-failed'),
    sa.Column('charge_id', sa.String(length=255), nullable=False, comment='Charge ID'),
    sa.Column('paid_at', sa.TIMESTAMP(), nullable=False, comment='Payment time'),
    sa.Column('refunded_at', sa.TIMESTAMP(), nullable=False, comment='Refund time'),
    sa.Column('closed_at', sa.TIMESTAMP(), nullable=False, comment='Close time'),
    sa.Column('failed_at', sa.TIMESTAMP(), nullable=False, comment='Failed time'),
    sa.Column('refund_id', sa.String(length=255), nullable=False, comment='Refund ID'),
    sa.Column('failure_code', sa.String(length=255), nullable=False, comment='Failure code'),
    sa.Column('failure_msg', sa.String(length=255), nullable=False, comment='Failure message'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pingxx_order', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pingxx_order_course_id'), ['course_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pingxx_order_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pingxx_order_pingxx_app_id'), ['pingxx_app_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pingxx_order_pingxx_transaction_no'), ['pingxx_transaction_no'], unique=False)
        batch_op.create_index(batch_op.f('ix_pingxx_order_record_id'), ['record_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pingxx_order_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('room_info', schema=None) as batch_op:
        batch_op.drop_index('idx_family_id_room_info')
        batch_op.drop_index('idx_room_id_room_info')

    op.drop_table('room_info')
    with op.batch_alter_table('contact', schema=None) as batch_op:
        batch_op.drop_index('id_user_id')
        batch_op.drop_index('idx_contact_id_contact')

    op.drop_table('contact')
    with op.batch_alter_table('ai_course_lesson_generation', schema=None) as batch_op:
        batch_op.drop_index('idx_attend_id_ai_course_lesson_generation')
        batch_op.drop_index('idx_course_id_ai_course_lesson_generation')
        batch_op.drop_index('idx_generation_id_ai_course_lesson_generation')
        batch_op.drop_index('idx_lesson_id_ai_course_lesson_generation')
        batch_op.drop_index('idx_script_id_ai_course_lesson_generation')
        batch_op.drop_index('idx_user_id_ai_course_lesson_generation')

    op.drop_table('ai_course_lesson_generation')
    with op.batch_alter_table('family_info', schema=None) as batch_op:
        batch_op.drop_index('idx_family_id_family_info')

    op.drop_table('family_info')
    op.drop_table('lesson')
    with op.batch_alter_table('chat_img', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_id_image_table')
        batch_op.drop_index('idx_img_id_image_table')
        batch_op.drop_index('idx_user_id_image_table')

    op.drop_table('chat_img')
    with op.batch_alter_table('todo', schema=None) as batch_op:
        batch_op.drop_index('idx_user_id_todo')

    op.drop_table('todo')
    op.drop_table('classroom_online_count')
    with op.batch_alter_table('user_family_mapping', schema=None) as batch_op:
        batch_op.drop_index('idx_family_id_user_family_mapping')
        batch_op.drop_index('idx_user_id_user_family_mapping')

    op.drop_table('user_family_mapping')
    with op.batch_alter_table('room_msg', schema=None) as batch_op:
        batch_op.drop_index('idx_msg_id_room_msg')

    op.drop_table('room_msg')
    with op.batch_alter_table('todo_list', schema=None) as batch_op:
        batch_op.drop_index('idx_todo_id_todo_list')
        batch_op.drop_index('idx_user_id_todo_list')

    op.drop_table('todo_list')
    with op.batch_alter_table('chat_info', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_id_chat_info')
        batch_op.drop_index('idx_user_id_chat_info')

    op.drop_table('chat_info')
    with op.batch_alter_table('chat_msg', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_id_chat_msg')

    op.drop_table('chat_msg')
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.drop_index('idx_user_id_document')

    op.drop_table('document')
    with op.batch_alter_table('admin_info', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('default_model',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               comment='Default model',
               existing_comment='gpt model ',
               existing_nullable=False,
               existing_server_default=sa.text("'gpt-4-0613'"))
        batch_op.alter_column('user_state',
               existing_type=mysql.INTEGER(),
               nullable=True,
               comment='User_state',
               existing_comment='user state',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_sex',
               existing_type=mysql.INTEGER(),
               nullable=True,
               comment='user sex',
               existing_comment='0-default ,1-male,2-female',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_birth',
               existing_type=sa.DATE(),
               nullable=True,
               comment='user birth',
               existing_comment='birth',
               existing_server_default=sa.text("'1984-01-01'"))
        batch_op.alter_column('user_avatar',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='user avatar',
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_email_user_info')
        batch_op.drop_index('idx_mobile_user_info')
        batch_op.drop_index('idx_username_user_info')

    with op.batch_alter_table('ai_course', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='Unique ID',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('course_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_course_id_ai_course')

    with op.batch_alter_table('ai_course_buy_record', schema=None) as batch_op:
        batch_op.add_column(sa.Column('pay_value', sa.Numeric(precision=10, scale=2), nullable=False, comment='Payment value'))
        batch_op.alter_column('record_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Record UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_course_id_ai_course_buy_record')
        batch_op.drop_index('idx_record_id_ai_course_buy_record')
        batch_op.drop_index('idx_user_id_ai_course_buy_record')

    with op.batch_alter_table('ai_course_lesson_attend', schema=None) as batch_op:
        batch_op.alter_column('attend_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('status',
               existing_type=mysql.INTEGER(),
               comment='Status of the attend: 0-not started, 1-in progress, 2-completed',
               existing_comment='Status of the attend 0-未开始 1-进行中 2-已结束',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('script_index',
               existing_type=mysql.INTEGER(),
               comment='Status of the attend: 0-not started, 1-in progress, 2-completed',
               existing_comment='script index',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.drop_index('idx_attend_id_ai_course_lesson_attend')
        batch_op.drop_index('idx_course_id_ai_course_lesson_attend')
        batch_op.drop_index('idx_lesson_id_ai_course_lesson_attend')
        batch_op.drop_index('idx_user_id_ai_course_lesson_attend')

    with op.batch_alter_table('ai_course_lesson_attend_association', schema=None) as batch_op:
        batch_op.alter_column('association_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('from_attend_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               comment='Attend UUID',
               existing_comment='From Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('to_attend_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               comment='Attend UUID',
               existing_comment='To Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('association_status',
               existing_type=mysql.INTEGER(),
               comment='Status of the attend: 0-not started, 1-in progress, 2-completed',
               existing_comment='Conversion state',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.drop_index('ix_ass_id')
        batch_op.drop_index('ix_from_attend_id')
        batch_op.drop_index('ix_to_attend_id')
        batch_op.drop_index('ix_user_id')

    with op.batch_alter_table('ai_course_lesson_attendscript', schema=None) as batch_op:
        batch_op.alter_column('attend_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('script_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Script UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_attend_id_ai_course_lesson_attendscript')
        batch_op.drop_index('idx_course_id_ai_course_lesson_attendscript')
        batch_op.drop_index('idx_lesson_id_ai_course_lesson_attendscript')
        batch_op.drop_index('idx_script_id_ai_course_lesson_attendscript')
        batch_op.drop_index('idx_user_id_ai_course_lesson_attendscript')

    with op.batch_alter_table('ai_lesson', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               comment=None,
               existing_comment='Unique ID',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('lesson_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_type',
               existing_type=mysql.INTEGER(),
               comment='Lesson type',
               existing_comment='0 默认 1 体验课 2 系统课 3 扩展课',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('pre_lesson_no',
               existing_type=mysql.VARCHAR(length=255),
               comment='pre_lesson_no',
               existing_comment='pre lesson no',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_course_id_ai_lesson')
        batch_op.drop_index('idx_lesson_id_ai_lesson')
        batch_op.drop_column('lesson_sale_type')

    with op.batch_alter_table('ai_lesson_script', schema=None) as batch_op:
        batch_op.alter_column('script_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Script UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('script_prompt',
               existing_type=mysql.TEXT(),
               comment='Script prompt',
               existing_comment='Script content',
               existing_nullable=False)
        batch_op.alter_column('script_model',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Script model',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('script_temprature',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               comment='Script Temprature',
               existing_nullable=False,
               existing_server_default=sa.text("'0.80'"))
        batch_op.alter_column('script_check_flag',
               existing_type=mysql.TEXT(),
               nullable=False,
               comment='Script check flag')
        batch_op.alter_column('script_ui_profile',
               existing_type=mysql.TEXT(),
               comment='Script UI profile',
               existing_comment='Script check content',
               existing_nullable=False)
        batch_op.alter_column('script_other_conf',
               existing_type=mysql.TEXT(),
               comment='Other configurations of the script',
               existing_comment='脚本的其他配置',
               existing_nullable=False)
        batch_op.drop_index('idx_lesson_id_ai_lesson_script')
        batch_op.drop_index('idx_script_id_ai_lesson_script')

    with op.batch_alter_table('risk_control_result', schema=None) as batch_op:
        batch_op.alter_column('chat_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Chat UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_chat_id_risk_control_result')
        batch_op.drop_index('idx_user_id_risk_control_result')

    with op.batch_alter_table('user_conversion', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('conversion_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Conversion UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('conversion_source',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               comment='Conversion type',
               existing_comment='Conversion Source ',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('conversion_uuid',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='Conversion UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_conversion_id_user_conversion')
        batch_op.drop_index('idx_conversion_uuid_user_conversion')
        batch_op.drop_index('idx_user_id_user_conversion')

    with op.batch_alter_table('user_info', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('default_model',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               comment='Default model',
               existing_comment='gpt model ',
               existing_nullable=False,
               existing_server_default=sa.text("'gpt-4-0613'"))
        batch_op.alter_column('user_state',
               existing_type=mysql.INTEGER(),
               nullable=True,
               comment='User_state',
               existing_comment='user state',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_sex',
               existing_type=mysql.INTEGER(),
               nullable=True,
               comment='user sex',
               existing_comment='0-default ,1-male,2-female',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_birth',
               existing_type=sa.DATE(),
               nullable=True,
               comment='user birth',
               existing_comment='birth',
               existing_server_default=sa.text("'1984-01-01'"))
        batch_op.alter_column('user_avatar',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='user avatar',
               existing_server_default=sa.text("''"))
        batch_op.drop_index('idx_email_user_info')
        batch_op.drop_index('idx_mobile_user_info')
        batch_op.drop_index('idx_username_user_info')

    with op.batch_alter_table('user_profile', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sa.String(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('profile_type',
               existing_type=mysql.INTEGER(),
               comment='0 default, 1 system configuration, 2 user configuration, 3 course configuration',
               existing_comment='0 默认,1 系统配置,2 用户配置，3 课程配置',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.drop_index('idx_user_id_user_profile')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_profile', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_user_profile', ['user_id'], unique=False)
        batch_op.alter_column('profile_type',
               existing_type=mysql.INTEGER(),
               comment='0 默认,1 系统配置,2 用户配置，3 课程配置',
               existing_comment='0 default, 1 system configuration, 2 user configuration, 3 course configuration',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('user_info', schema=None) as batch_op:
        batch_op.create_index('idx_username_user_info', ['username'], unique=False)
        batch_op.create_index('idx_mobile_user_info', ['mobile'], unique=False)
        batch_op.create_index('idx_email_user_info', ['email'], unique=False)
        batch_op.alter_column('user_avatar',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='user avatar',
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_birth',
               existing_type=sa.DATE(),
               nullable=False,
               comment='birth',
               existing_comment='user birth',
               existing_server_default=sa.text("'1984-01-01'"))
        batch_op.alter_column('user_sex',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment='0-default ,1-male,2-female',
               existing_comment='user sex',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_state',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment='user state',
               existing_comment='User_state',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('default_model',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               comment='gpt model ',
               existing_comment='Default model',
               existing_nullable=False,
               existing_server_default=sa.text("'gpt-4-0613'"))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('user_conversion', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_user_conversion', ['user_id'], unique=False)
        batch_op.create_index('idx_conversion_uuid_user_conversion', ['conversion_uuid'], unique=False)
        batch_op.create_index('idx_conversion_id_user_conversion', ['conversion_id'], unique=False)
        batch_op.alter_column('conversion_uuid',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Conversion UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('conversion_source',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               comment='Conversion Source ',
               existing_comment='Conversion type',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('conversion_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Conversion UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('risk_control_result', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_risk_control_result', ['user_id'], unique=False)
        batch_op.create_index('idx_chat_id_risk_control_result', ['chat_id'], unique=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('chat_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Chat UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('ai_lesson_script', schema=None) as batch_op:
        batch_op.create_index('idx_script_id_ai_lesson_script', ['script_id'], unique=False)
        batch_op.create_index('idx_lesson_id_ai_lesson_script', ['lesson_id'], unique=False)
        batch_op.alter_column('script_other_conf',
               existing_type=mysql.TEXT(),
               comment='脚本的其他配置',
               existing_comment='Other configurations of the script',
               existing_nullable=False)
        batch_op.alter_column('script_ui_profile',
               existing_type=mysql.TEXT(),
               comment='Script check content',
               existing_comment='Script UI profile',
               existing_nullable=False)
        batch_op.alter_column('script_check_flag',
               existing_type=mysql.TEXT(),
               nullable=True,
               comment=None,
               existing_comment='Script check flag')
        batch_op.alter_column('script_temprature',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               comment=None,
               existing_comment='Script Temprature',
               existing_nullable=False,
               existing_server_default=sa.text("'0.80'"))
        batch_op.alter_column('script_model',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Script model',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('script_prompt',
               existing_type=mysql.TEXT(),
               comment='Script content',
               existing_comment='Script prompt',
               existing_nullable=False)
        batch_op.alter_column('lesson_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('script_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Script UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('ai_lesson', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lesson_sale_type', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='0 默认 1 体验课 2 系统课 3 扩展课'))
        batch_op.create_index('idx_lesson_id_ai_lesson', ['lesson_id'], unique=False)
        batch_op.create_index('idx_course_id_ai_lesson', ['course_id'], unique=False)
        batch_op.alter_column('pre_lesson_no',
               existing_type=mysql.VARCHAR(length=255),
               comment='pre lesson no',
               existing_comment='pre_lesson_no',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_type',
               existing_type=mysql.INTEGER(),
               comment='0 默认 1 体验课 2 系统课 3 扩展课',
               existing_comment='Lesson type',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('course_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               comment='Unique ID',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('ai_course_lesson_attendscript', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_ai_course_lesson_attendscript', ['user_id'], unique=False)
        batch_op.create_index('idx_script_id_ai_course_lesson_attendscript', ['script_id'], unique=False)
        batch_op.create_index('idx_lesson_id_ai_course_lesson_attendscript', ['lesson_id'], unique=False)
        batch_op.create_index('idx_course_id_ai_course_lesson_attendscript', ['course_id'], unique=False)
        batch_op.create_index('idx_attend_id_ai_course_lesson_attendscript', ['attend_id'], unique=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('script_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Script UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('attend_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('ai_course_lesson_attend_association', schema=None) as batch_op:
        batch_op.create_index('ix_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_to_attend_id', ['to_attend_id'], unique=False)
        batch_op.create_index('ix_from_attend_id', ['from_attend_id'], unique=False)
        batch_op.create_index('ix_ass_id', ['association_id'], unique=False)
        batch_op.alter_column('association_status',
               existing_type=mysql.INTEGER(),
               comment='Conversion state',
               existing_comment='Status of the attend: 0-not started, 1-in progress, 2-completed',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('to_attend_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               comment='To Attend UUID',
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('from_attend_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               comment='From Attend UUID',
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('association_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('ai_course_lesson_attend', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_ai_course_lesson_attend', ['user_id'], unique=False)
        batch_op.create_index('idx_lesson_id_ai_course_lesson_attend', ['lesson_id'], unique=False)
        batch_op.create_index('idx_course_id_ai_course_lesson_attend', ['course_id'], unique=False)
        batch_op.create_index('idx_attend_id_ai_course_lesson_attend', ['attend_id'], unique=False)
        batch_op.alter_column('script_index',
               existing_type=mysql.INTEGER(),
               comment='script index',
               existing_comment='Status of the attend: 0-not started, 1-in progress, 2-completed',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('status',
               existing_type=mysql.INTEGER(),
               comment='Status of the attend 0-未开始 1-进行中 2-已结束',
               existing_comment='Status of the attend: 0-not started, 1-in progress, 2-completed',
               existing_nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('lesson_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Lesson UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('attend_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Attend UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    with op.batch_alter_table('ai_course_buy_record', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_ai_course_buy_record', ['user_id'], unique=False)
        batch_op.create_index('idx_record_id_ai_course_buy_record', ['record_id'], unique=False)
        batch_op.create_index('idx_course_id_ai_course_buy_record', ['course_id'], unique=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('course_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('record_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Record UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.drop_column('pay_value')

    with op.batch_alter_table('ai_course', schema=None) as batch_op:
        batch_op.create_index('idx_course_id_ai_course', ['course_id'], unique=False)
        batch_op.alter_column('course_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='Course UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               comment='Unique ID',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('admin_info', schema=None) as batch_op:
        batch_op.create_index('idx_username_user_info', ['username'], unique=False)
        batch_op.create_index('idx_mobile_user_info', ['mobile'], unique=False)
        batch_op.create_index('idx_email_user_info', ['email'], unique=False)
        batch_op.alter_column('user_avatar',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='user avatar',
               existing_server_default=sa.text("''"))
        batch_op.alter_column('user_birth',
               existing_type=sa.DATE(),
               nullable=False,
               comment='birth',
               existing_comment='user birth',
               existing_server_default=sa.text("'1984-01-01'"))
        batch_op.alter_column('user_sex',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment='0-default ,1-male,2-female',
               existing_comment='user sex',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('user_state',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment='user state',
               existing_comment='User_state',
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('default_model',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               comment='gpt model ',
               existing_comment='Default model',
               existing_nullable=False,
               existing_server_default=sa.text("'gpt-4-0613'"))
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=mysql.CHAR(length=36),
               existing_comment='User UUID',
               existing_nullable=False,
               existing_server_default=sa.text("''"))

    op.create_table('document',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('document_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Document UUID'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('title', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Document title'),
    sa.Column('content', mysql.TEXT(), nullable=False, comment='Document content in Markdown'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_document', ['user_id'], unique=False)

    op.create_table('chat_msg',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('chat_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Chat UUID'),
    sa.Column('tokens', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Tokens'),
    sa.Column('role', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Role in the chat'),
    sa.Column('type', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Type of the message'),
    sa.Column('msg', mysql.TEXT(), nullable=False, comment='Message content'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.Column('status', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Status of the message'),
    sa.Column('function_info', mysql.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('chat_msg', schema=None) as batch_op:
        batch_op.create_index('idx_chat_id_chat_msg', ['chat_id'], unique=False)

    op.create_table('chat_info',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('chat_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Chat UUID'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('chat_title', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Title of the chat'),
    sa.Column('tokens', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Tokens'),
    sa.Column('status', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Status of the chat'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('chat_info', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_chat_info', ['user_id'], unique=False)
        batch_op.create_index('idx_chat_id_chat_info', ['chat_id'], unique=False)

    op.create_table('todo_list',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('todo_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Todo UUID'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('datetime', mysql.DATETIME(), nullable=False, comment='Time of the todo event'),
    sa.Column('end_time', mysql.DATETIME(), server_default=sa.text('((now()'), nullable=False),
    sa.Column('details', mysql.TEXT(), nullable=False, comment='Details of the todo event'),
    sa.Column('location', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Location of the todo event'),
    sa.Column('participants', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Participants in the todo event'),
    sa.Column('description', mysql.TEXT(), nullable=False, comment='Description of the todo event'),
    sa.Column('completed', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Whether the todo event is completed'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('todo_list', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_todo_list', ['user_id'], unique=False)
        batch_op.create_index('idx_todo_id_todo_list', ['todo_id'], unique=False)

    op.create_table('room_msg',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('room_id', mysql.VARCHAR(length=255), nullable=False, comment='Room ID'),
    sa.Column('user_name', mysql.VARCHAR(length=255), nullable=False, comment='User Name'),
    sa.Column('time', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Time of Message'),
    sa.Column('user_msg', mysql.TEXT(), nullable=False, comment='User Message'),
    sa.Column('status', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Status'),
    sa.Column('msg_id', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Message ID'),
    sa.Column('doc_id', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Document ID'),
    sa.Column('embeddings', sa.BLOB(), nullable=True, comment='Embeddings'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('room_msg', schema=None) as batch_op:
        batch_op.create_index('idx_msg_id_room_msg', ['msg_id'], unique=False)

    op.create_table('user_family_mapping',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('family_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Family UUID'),
    sa.Column('status', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Status of the relationship'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('user_family_mapping', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_user_family_mapping', ['user_id'], unique=False)
        batch_op.create_index('idx_family_id_user_family_mapping', ['family_id'], unique=False)

    op.create_table('classroom_online_count',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('room_id', mysql.VARCHAR(length=255), nullable=False, comment='Room ID'),
    sa.Column('live_count', mysql.INTEGER(), autoincrement=False, nullable=False, comment='Live Count'),
    sa.Column('create_time', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation Time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('todo',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('todo_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Todo UUID'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('title', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Todo title'),
    sa.Column('description', mysql.TEXT(), nullable=False, comment='Todo description'),
    sa.Column('is_done', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Status of the todo, 0 for not done, 1 for done'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.Column('deadline', mysql.DATETIME(), nullable=True, comment='Deadline for the todo'),
    sa.Column('completed_at', mysql.DATETIME(), nullable=True, comment='Completion time of the todo'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('todo', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_todo', ['user_id'], unique=False)

    op.create_table('chat_img',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('img_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Image UUID'),
    sa.Column('chat_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Chat UUID'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('bucket_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Bucket UUID'),
    sa.Column('prompt', mysql.TEXT(), nullable=False, comment='Prompt for the image'),
    sa.Column('size', mysql.VARCHAR(length=50), server_default=sa.text("''"), nullable=False, comment='Size of the image'),
    sa.Column('url', mysql.TEXT(), nullable=False, comment='URL of the image'),
    sa.Column('bucket_base', mysql.TEXT(), nullable=False, comment='Bucket Base URL'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('chat_img', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_image_table', ['user_id'], unique=False)
        batch_op.create_index('idx_img_id_image_table', ['img_id'], unique=False)
        batch_op.create_index('idx_chat_id_image_table', ['chat_id'], unique=False)

    op.create_table('lesson',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('title', mysql.VARCHAR(length=255), nullable=False, comment='Title'),
    sa.Column('start', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('room_id', mysql.VARCHAR(length=255), nullable=False, comment='Room ID'),
    sa.Column('document_id', mysql.VARCHAR(length=255), nullable=False, comment='Document ID'),
    sa.Column('max_live_count', mysql.INTEGER(), autoincrement=False, nullable=False, comment='Maximum Live Count'),
    sa.Column('number', mysql.INTEGER(), autoincrement=False, nullable=False, comment='Number'),
    sa.Column('season', mysql.INTEGER(), autoincrement=False, nullable=False, comment='Season'),
    sa.Column('outlines', mysql.TEXT(), nullable=True, comment='Outlines'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('family_info',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('family_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Family UUID'),
    sa.Column('family_name', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Family name'),
    sa.Column('address', mysql.TEXT(), nullable=False, comment='Address'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('family_info', schema=None) as batch_op:
        batch_op.create_index('idx_family_id_family_info', ['family_id'], unique=False)

    op.create_table('ai_course_lesson_generation',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('generation_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Generation UUID'),
    sa.Column('lesson_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Lesson UUID'),
    sa.Column('course_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Course UUID'),
    sa.Column('script_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Script UUID'),
    sa.Column('attend_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Attend UUID'),
    sa.Column('model', mysql.VARCHAR(length=50), server_default=sa.text("''"), nullable=False, comment='Model of the generation'),
    sa.Column('prompt', mysql.TEXT(), nullable=False, comment='Prompt for the generation'),
    sa.Column('content', mysql.TEXT(), nullable=False, comment='Content of the generation'),
    sa.Column('input_tokens', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Input tokens of the generation'),
    sa.Column('output_tokens', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Output tokens of the generation'),
    sa.Column('index', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Index of the generation'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='User UUID'),
    sa.Column('status', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Status of the generation'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('ai_course_lesson_generation', schema=None) as batch_op:
        batch_op.create_index('idx_user_id_ai_course_lesson_generation', ['user_id'], unique=False)
        batch_op.create_index('idx_script_id_ai_course_lesson_generation', ['script_id'], unique=False)
        batch_op.create_index('idx_lesson_id_ai_course_lesson_generation', ['lesson_id'], unique=False)
        batch_op.create_index('idx_generation_id_ai_course_lesson_generation', ['generation_id'], unique=False)
        batch_op.create_index('idx_course_id_ai_course_lesson_generation', ['course_id'], unique=False)
        batch_op.create_index('idx_attend_id_ai_course_lesson_generation', ['attend_id'], unique=False)

    op.create_table('contact',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('contact_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Contact UUID'),
    sa.Column('name', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Name'),
    sa.Column('email', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Email'),
    sa.Column('mobile', mysql.VARCHAR(length=20), server_default=sa.text("''"), nullable=False, comment='Mobile'),
    sa.Column('telephone', mysql.VARCHAR(length=20), server_default=sa.text("''"), nullable=False, comment='Telephone'),
    sa.Column('position', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Position'),
    sa.Column('company', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Company'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.Column('user_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='user_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('contact', schema=None) as batch_op:
        batch_op.create_index('idx_contact_id_contact', ['contact_id'], unique=False)
        batch_op.create_index('id_user_id', ['user_id'], unique=False)

    op.create_table('room_info',
    sa.Column('id', mysql.BIGINT(), autoincrement=True, nullable=False, comment='Unique ID'),
    sa.Column('room_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Room UUID'),
    sa.Column('family_id', mysql.CHAR(length=36), server_default=sa.text("''"), nullable=False, comment='Family UUID'),
    sa.Column('room_name', mysql.VARCHAR(length=255), server_default=sa.text("''"), nullable=False, comment='Room name'),
    sa.Column('room_type', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='Type of the room'),
    sa.Column('room_note', mysql.TEXT(), nullable=False, comment='Note of the room'),
    sa.Column('created', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Creation time'),
    sa.Column('updated', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Update time'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('room_info', schema=None) as batch_op:
        batch_op.create_index('idx_room_id_room_info', ['room_id'], unique=False)
        batch_op.create_index('idx_family_id_room_info', ['family_id'], unique=False)

    with op.batch_alter_table('pingxx_order', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pingxx_order_user_id'))
        batch_op.drop_index(batch_op.f('ix_pingxx_order_record_id'))
        batch_op.drop_index(batch_op.f('ix_pingxx_order_pingxx_transaction_no'))
        batch_op.drop_index(batch_op.f('ix_pingxx_order_pingxx_app_id'))
        batch_op.drop_index(batch_op.f('ix_pingxx_order_order_id'))
        batch_op.drop_index(batch_op.f('ix_pingxx_order_course_id'))

    op.drop_table('pingxx_order')
    with op.batch_alter_table('discount_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_discount_record_user_id'))
        batch_op.drop_index(batch_op.f('ix_discount_record_record_id'))
        batch_op.drop_index(batch_op.f('ix_discount_record_discount_id'))
        batch_op.drop_index(batch_op.f('ix_discount_record_course_id'))

    op.drop_table('discount_record')
    with op.batch_alter_table('discount', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_discount_discount_id'))
        batch_op.drop_index(batch_op.f('ix_discount_discount_code'))

    op.drop_table('discount')
    # ### end Alembic commands ###
